{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"YouC eStore documentation Youc is an industry leader in takeaway food packaging and supplies that keep food fresher for longer, reducing waste and help customers save money.","title":"Home"},{"location":"#youc-estore-documentation","text":"Youc is an industry leader in takeaway food packaging and supplies that keep food fresher for longer, reducing waste and help customers save money.","title":"YouC eStore documentation"},{"location":"coding/","text":"Frontend Technical Documentation The web application can be mainly be divided into two sides: frontend or also known as client-side application, an application that runs inside the browser of the user, backend or also known as server-side application, an application that is connected with a database and provides apis for frontend in order to retrieve data or post data to. This documentation only contains information for frontend as this is made by frontend developer. Frontend Pages All pages for the website can be found under /pages folder. As Nextjs is a dynamic framework, all page url will be named automatically based on the folder name or the Js filename. Please note that all pages with extension of .page.js are all url pages of the website. This extension purpose is to help Nextjs recognize which pages will be url pages in that folder, and it will treat all other pages in that folder as components. This logic can be found in next.config.js file under root folder. If you don't want to use the .page.js extension, you can move all components file into components folder, and rename all .page.js into .js as normal State All state information such as userId, cart, etc. are stored in the localStorage. The store.js file under src folder stores all state's information as well as the logic to update state. Component styling This website is using material-ui v4. See docs . Please note that changing to mui-v5 might cause some styling errors as Nextjs prerenders all pages in default in advance instead of doing all in the client side, that is why the style components get conflicted if using mui v5. At the moment, this issue is not fixed yet, therefore, mui v4 was used instead. Sitemap In order to help SEO ranking of the website, next-sitemap is used to create sitemap for both static and dynamic pages. Sitemap for dynamic pages logic can be found in 'server-sitemap.xml' folder under 'pages' folder.","title":"Frontend Documentation"},{"location":"coding/#frontend-technical-documentation","text":"The web application can be mainly be divided into two sides: frontend or also known as client-side application, an application that runs inside the browser of the user, backend or also known as server-side application, an application that is connected with a database and provides apis for frontend in order to retrieve data or post data to. This documentation only contains information for frontend as this is made by frontend developer.","title":"Frontend Technical Documentation"},{"location":"coding/#frontend-pages","text":"All pages for the website can be found under /pages folder. As Nextjs is a dynamic framework, all page url will be named automatically based on the folder name or the Js filename. Please note that all pages with extension of .page.js are all url pages of the website. This extension purpose is to help Nextjs recognize which pages will be url pages in that folder, and it will treat all other pages in that folder as components. This logic can be found in next.config.js file under root folder. If you don't want to use the .page.js extension, you can move all components file into components folder, and rename all .page.js into .js as normal","title":"Frontend Pages"},{"location":"coding/#state","text":"All state information such as userId, cart, etc. are stored in the localStorage. The store.js file under src folder stores all state's information as well as the logic to update state.","title":"State"},{"location":"coding/#component-styling","text":"This website is using material-ui v4. See docs . Please note that changing to mui-v5 might cause some styling errors as Nextjs prerenders all pages in default in advance instead of doing all in the client side, that is why the style components get conflicted if using mui v5. At the moment, this issue is not fixed yet, therefore, mui v4 was used instead.","title":"Component styling"},{"location":"coding/#sitemap","text":"In order to help SEO ranking of the website, next-sitemap is used to create sitemap for both static and dynamic pages. Sitemap for dynamic pages logic can be found in 'server-sitemap.xml' folder under 'pages' folder.","title":"Sitemap"},{"location":"deployment/","text":"Deployment Currently the website is deployed as a test version on Vercel. If you want to deploy in your local machine, use the following commands next build then run it with next start","title":"Deployment"},{"location":"deployment/#deployment","text":"Currently the website is deployed as a test version on Vercel. If you want to deploy in your local machine, use the following commands next build then run it with next start","title":"Deployment"},{"location":"overview/","text":"Technical Documentation for Developer Application The website is built with Nextjs. Nextjs is a flexible React framework that allows you to build blocks to help creating faster web applications. Another reason to choose Nextjs is that it is an exceptional choice for SEO rankings and creating dynamic web pages. Inside the app, state's information such as cart, userId, etc. are stored in Contexts, so those information can be passed down to other components when necessary. Reducers are also used to consolidate the state's update logic. State will be stored in localStorage, so whenever user refresh the page, state information will not be lost. Development Workflow Dependencies Run the following command to install all dependencies on your working environment. npm install # or yarn install If you encounter any error regarding to error dependency tree, please try the following command instead. npm/yarn install --legacy-peer-deps # or npm/yarn install --force Run the development server Run the following command next dev This command will run the application on development server. This is suitable when you are making changes and want to see it applied before deployment. Open http://localhost:3000 with your browser to see the result. Learn More To learn more about Next.js, take a look at the following resources: Next.js Documentation - learn about Next.js features and API. Learn Next.js - an interactive Next.js tutorial.","title":"Overview"},{"location":"overview/#technical-documentation-for-developer","text":"","title":"Technical Documentation for Developer"},{"location":"overview/#application","text":"The website is built with Nextjs. Nextjs is a flexible React framework that allows you to build blocks to help creating faster web applications. Another reason to choose Nextjs is that it is an exceptional choice for SEO rankings and creating dynamic web pages. Inside the app, state's information such as cart, userId, etc. are stored in Contexts, so those information can be passed down to other components when necessary. Reducers are also used to consolidate the state's update logic. State will be stored in localStorage, so whenever user refresh the page, state information will not be lost.","title":"Application"},{"location":"overview/#development-workflow","text":"","title":"Development Workflow"},{"location":"overview/#dependencies","text":"Run the following command to install all dependencies on your working environment. npm install # or yarn install If you encounter any error regarding to error dependency tree, please try the following command instead. npm/yarn install --legacy-peer-deps # or npm/yarn install --force","title":"Dependencies"},{"location":"overview/#run-the-development-server","text":"Run the following command next dev This command will run the application on development server. This is suitable when you are making changes and want to see it applied before deployment. Open http://localhost:3000 with your browser to see the result.","title":"Run the development server"},{"location":"overview/#learn-more","text":"To learn more about Next.js, take a look at the following resources: Next.js Documentation - learn about Next.js features and API. Learn Next.js - an interactive Next.js tutorial.","title":"Learn More"},{"location":"patterns/","text":"Coding Patterns Casing This codebase will be using camel casing Linters / Formatters This will automatically format your code if you install ESLint in VS Code or type yarn lint in the specific folders. Make sure you have installed the devDependencies so additional linters can be used.","title":"Coding Patterns"},{"location":"patterns/#coding-patterns","text":"","title":"Coding Patterns"},{"location":"patterns/#casing","text":"This codebase will be using camel casing","title":"Casing"},{"location":"patterns/#linters-formatters","text":"This will automatically format your code if you install ESLint in VS Code or type yarn lint in the specific folders. Make sure you have installed the devDependencies so additional linters can be used.","title":"Linters / Formatters"},{"location":"todo/","text":"Upcoming features to develop Profile Customers need a profile page to see all their current information. They will also be able to request to change their information in this page. It also would be nice if they can access to view all their current order, and maybe show the order progress. Payment Payment page needs to be added as a final step after confirming delivery information. However, due to security problem, this feature was not developed, might consider to implement any third party payment system. Image copyright Need to make sure all images are our own, or from open-sources Deployment Need to deploy to the company server, which is IIS. Currently haven't found any solutions to deploy SSR Nextjs to IIS server. Sitemap After deployment feature is done, pay attention when submitting sitemap to google. The static sitemap is normally good to go, but somehow google cannot fetch server-sitemap, although test live url always works well","title":"To-do features"},{"location":"todo/#upcoming-features-to-develop","text":"","title":"Upcoming features to develop"},{"location":"todo/#profile","text":"Customers need a profile page to see all their current information. They will also be able to request to change their information in this page. It also would be nice if they can access to view all their current order, and maybe show the order progress.","title":"Profile"},{"location":"todo/#payment","text":"Payment page needs to be added as a final step after confirming delivery information. However, due to security problem, this feature was not developed, might consider to implement any third party payment system.","title":"Payment"},{"location":"todo/#image-copyright","text":"Need to make sure all images are our own, or from open-sources","title":"Image copyright"},{"location":"todo/#deployment","text":"Need to deploy to the company server, which is IIS. Currently haven't found any solutions to deploy SSR Nextjs to IIS server.","title":"Deployment"},{"location":"todo/#sitemap","text":"After deployment feature is done, pay attention when submitting sitemap to google. The static sitemap is normally good to go, but somehow google cannot fetch server-sitemap, although test live url always works well","title":"Sitemap"},{"location":"user/","text":"User documentation Login system If customer is already a member of YouC and familiar with YouC online order system. Login will lead customers to the login page of YouC online order. Otherwise, if customers are new to YouC system, they can browse through products from YouC eStore, add any products they like to cart and register for an account when they want to check out. Navigation bar There are 3 pages in YouC eStore navigation bar: Products page, About us and Contact Us. The Products page, also the home page when customer first access the website, shows all products in YouC eStore system, and they are categorized carefully for the best experience of customers. The About Us page, contains all information about what YouC eStore is, and what types of products the website is providing as well as some shopping policies. The Contact Us page contains all information of how to contact YouC, or where the location of the warehouse is Cart Drawer Cart Drawer shows all products customers added to their shopping bag. Customers can access cart drawer by clicking on the cart icon on top right of their screen. In cart drawer, customers can choose to remove any products they don't want to buy anymore, or change quantity of any products if they want to. Checkout In order to process to check out, customers need to access Cart Drawer , and then click the 'CONFIRM ORDER' button when they are ready to checkout. The button will ask them to reconfirming the order, then lead them to fill in delivery information form. After filling in all delivery information, confirm the order by clicking the 'PLACE ORDER' button, the website will response with the customer order number.","title":"User Guide"},{"location":"user/#user-documentation","text":"","title":"User documentation"},{"location":"user/#login-system","text":"If customer is already a member of YouC and familiar with YouC online order system. Login will lead customers to the login page of YouC online order. Otherwise, if customers are new to YouC system, they can browse through products from YouC eStore, add any products they like to cart and register for an account when they want to check out.","title":"Login system"},{"location":"user/#navigation-bar","text":"There are 3 pages in YouC eStore navigation bar: Products page, About us and Contact Us. The Products page, also the home page when customer first access the website, shows all products in YouC eStore system, and they are categorized carefully for the best experience of customers. The About Us page, contains all information about what YouC eStore is, and what types of products the website is providing as well as some shopping policies. The Contact Us page contains all information of how to contact YouC, or where the location of the warehouse is","title":"Navigation bar"},{"location":"user/#cart-drawer","text":"Cart Drawer shows all products customers added to their shopping bag. Customers can access cart drawer by clicking on the cart icon on top right of their screen. In cart drawer, customers can choose to remove any products they don't want to buy anymore, or change quantity of any products if they want to.","title":"Cart Drawer"},{"location":"user/#checkout","text":"In order to process to check out, customers need to access Cart Drawer , and then click the 'CONFIRM ORDER' button when they are ready to checkout. The button will ask them to reconfirming the order, then lead them to fill in delivery information form. After filling in all delivery information, confirm the order by clicking the 'PLACE ORDER' button, the website will response with the customer order number.","title":"Checkout"}]}